version: "3.8"

services:
  app:
    build: ./AnimalMovements
    container_name: spring-boot-app
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
    volumes:
      - ./AnimalMovements:/app
      - /app/target
    command: ["./mvnw", "spring-boot:run"]

  frontend:
    build: ./frontend
    container_name: angular-app
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules 
    command: ["npm", "start"]
    environment:
      - CHOKIDAR_USEPOLLING=true  # Enables polling-based file watching for Docker
      - WATCHPACK_POLLING=true  # Improves compatibility with Watchpack in Webpack

  db:
    image: postgres:17
    container_name: postgres-db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  postgres_data:
